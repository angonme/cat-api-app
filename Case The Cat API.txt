Case The Cat API

1.Crie uma aplica√ß√£o na linguagem java com todo o codigo em portugues para coletar as seguintes informa√ß√µes da API de Gatos (https://thecatapi.com/):
a.Para cada uma das ra√ßas de gatos dispon√≠veis, armazenar as informa√ß√µes de origem, temperamento e descri√ß√£o em uma base de dados. (se dispon√≠vel)
b.Para cada uma das ra√ßas acima, salvar o endere√ßo de 3 imagens em uma base de dados. (se dispon√≠vel)
c.Salvar o endere√ßo de 3 imagens de gatos com chap√©u.
d.Salvar o endere√ßo de 3 imagens de gatos com √≥culos.

2.crie um banco de dados em mem√≥ria H2 para armazenar as informa√ß√µes

3.Utilizando a linguagem Java, crie 4 APIs REST com todo o codigo em portugues:
a.API capaz de listar todas as ra√ßas
b.API capaz de listar as informa√ß√µes de uma ra√ßa
c.API capaz de a partir de um temperamento listar as ra√ßas
d.API capaz de a partir de uma origem listar as ra√ßas

4.As APIs acima dever√£o expor m√©tricas de execu√ß√£o.

5.Crie uma cole√ß√£o no insomnia para consumir as APIs criadas.

6.Utilizando o Splunk crie uma query que mostre em tempo real os eventos que acontecem na execu√ß√£o da API criada no item 3, exemplos (Warning, Erro, Debug, Info, etc).

7.Utilizando Prometheus e grafana crie 3 dashboards que mostre em tempo real a quantidade de execu√ß√£o, a lat√™ncia (tempo de execu√ß√£o) e quantidade de erros da API criada acima.

8.Publique o projeto no Github e documentar em um README.md os itens abaixo:
a.Documenta√ß√£o do projeto
b.Documenta√ß√£o das APIs
c.Documenta√ß√£o de arquitetura
d.Documenta√ß√£o de como podemos subir uma c√≥pia deste ambiente localmente
e.Manual com prints dos Logs (item 6) e os 3 Dashboards (item 7)

9.Recomendado a utiliza√ß√£o do docker (http://www.docker.com) para montagem do ambiente, mas fique √† vontade para usar outras alternativas.
5.1 Caso opte pela utiliza√ß√£o do docker, publique os Dockerfiles no reposit√≥rio do projeto ou deixe a imagem publicada no Dockerhub.

O que voc√™ j√° tem pronto:
Item	Status
Aplica√ß√£o Java com Spring Boot	‚úÖ Pronta
Banco de dados H2 em mem√≥ria	‚úÖ Pronto
Consumo da API TheCatAPI	‚úÖ Pronto
APIs REST documentadas	‚úÖ Pronto
M√©tricas com Prometheus	‚úÖ Pronto
Dashboard com Grafana	‚úÖ Pronto
Logs preparados para Splunk	‚úÖ Pronto
Docker e Docker Compose	‚úÖ Pronto
Insomnia Collection	‚úÖ Pronto
Publica√ß√£o no GitHub	‚úÖ Finalizada

üß™ Pr√≥ximos passos (opcional):
Testar as APIs com o Insomnia
Importar o JSON do Grafana
Configurar Splunk com a query sugerida
Publicar a imagem no Docker Hub
